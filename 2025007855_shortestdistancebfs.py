# -*- coding: utf-8 -*-
"""2025007855-ShortestDistanceBFS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nrJDOZbe88Uwx92HrPVMhHiiZLF_q1Zt

Shortest Distance BFS
"""

def bfs_shortest_path(graph, start):
        distance = {}
        current_layer = [start]
        next_layer=[]
        distance[start] = 0
        while(current_layer):
          current_node = current_layer.pop(0)
          for neighbor in graph[current_node]:
            if neighbor not in distance:
              distance[neighbor] = distance[current_node] + 1
              next_layer.append(neighbor)

          if neighbor not in distance:
            distance[neighbor] = distance[current_node] + 1
            next_layer.append(neighbor)
          current_layer = next_layer
        return distance

graph= { 'A': ['B', 'D'],
    'B': ['A', 'C',],
    'C': [ 'B', 'G'],
    'D': ['A','E'],
    'E': ['D','F'],
    'F': ['E','G'],
    'G': ['H','I','C','F'],
    'H': ['G','I'],
    'I': ['H','G'],

  }

dist_path = bfs_shortest_path(graph, 'A')
print(dist_path)