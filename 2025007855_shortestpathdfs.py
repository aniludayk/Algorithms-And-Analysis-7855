# -*- coding: utf-8 -*-
"""2025007855-shortestpathDFS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WFaJ1su5T__CENX-MFb03YyeiUWSHrka

Shortest Path DFS
"""

from collections import deque

def shortest_path_list(graph,start,end):
    queue = deque([(start, 0)])
    visited = set()
    visited.add(start)
    while queue:
        node, list = queue.popleft()
        if node == end:
            return list
        if node in graph:
          for neighbor in graph[node]:
            if neighbor not in visited:
                queue.append((neighbor, list + 1))
                visited.add(neighbor)
    return -1

graph={
    'A':["B","C"],
    'B':["A","C","D"],
    'C':["E","F","B","A"],
    'D':["B"],
    'E':["C"],
    'F':["C"]
}
start = "A"
end = "E"
path_length = shortest_path_list(graph,start,end)
print(f"the shortest path length from {start} to {end} is: {path_length}")